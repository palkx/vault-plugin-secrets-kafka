---
services:
  builder:
    image: docker.io/golang:1.22.2-alpine
    entrypoint: /bin/ash
    environment:
      GIT_TAG_NAME: snapshot
    command:
      - -c
      - |
        apk add git gcc libc-dev
        cd /app
        rm -rf docker/vault/plugins/vault-plugin-secrets-kafka
        go build -tags musl -ldflags "-s -w -X main.Version=$${GIT_TAG_NAME}" -o docker/vault/plugins/vault-plugin-secrets-kafka cmd/vault-plugin-secrets-kafka/main.go
    volumes:
      - ./:/app
      - cache:/go/pkg/mod

  vault:
    hostname: vault
    image: docker.io/hashicorp/vault:1.16.2
    entrypoint: vault server -dev -dev-tls -dev-tls-cert-dir=/vault/config/tls -dev-plugin-dir=/vault/plugins/
    environment:
      VAULT_CACERT: /vault/config/tls/vault-ca.pem
      VAULT_ADDR: https://127.0.0.1:8200
      VAULT_API_ADDR: https://127.0.0.1:8200
      VAULT_ADDRESS: https://127.0.0.1:8200
      VAULT_TOKEN: roottoken
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      VAULT_DEV_ROOT_TOKEN_ID: roottoken
    volumes:
      - vault-data:/var/lib/vault:rw
      - ./docker/vault:/vault:rw
    cap_add:
      - IPC_LOCK
    ports:
      - 127.0.0.1:8200:8200/tcp
    networks:
      - private
    healthcheck:
      test:
        - "CMD"
        - "wget"
        - "--no-check-certificate"
        - "--spider"
        - "--proxy"
        - "off"
        - "https://127.0.0.1:8200/v1/sys/health?standbyok=true"
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 5s
    depends_on:
      builder:
        condition: service_completed_successfully

  # vault-provisioner:
  #   hostname: vault-provisioner
  #   image: docker.io/hashicorp/terraform:1.7.5
  #   depends_on:
  #     vault:
  #       condition: service_healthy

  # kafka:
  #   hostname: kafka
  #   image: docker.io/confluentinc/cp-kafka:7.5.2
  #   volumes:
  #     - kafka-data:/var/lib/kafka/data:rw
  #   environment:
  #     KAFKA_NODE_ID: 1
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
  #     KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092"
  #     KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka:9092"
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_PROCESS_ROLES: "broker,controller"
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:29093"
  #     KAFKA_LISTENERS: "PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092"
  #     KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
  #     KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
  #     KAFKA_LOG_DIRS: "/var/lib/kafka/data"
  #     CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"

networks:
  private: {}

volumes:
  kafka-data: {}
  vault-data: {}
  cache: {}
